<Page
    x:Class="WishList.WishListPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:WishList"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:src="using:WishList.Models"
    xmlns:ViewModels="using:WishList.ViewModels"
    mc:Ignorable="d">

    <Page.Resources>
        <!--  brief information template  -->
        <DataTemplate x:Key="ItemView" x:DataType="src:Item">
            <StackPanel Width="Auto" HorizontalAlignment="Stretch">
                <TextBlock Margin="12, 15, 12, 0" FontSize="18" Text="{x:Bind Path=Name, Mode=OneWay}" />
            </StackPanel>
        </DataTemplate>
        <!--  details expand template  -->
        <DataTemplate x:Key="SelectedItemView" x:DataType="src:Item">
            <StackPanel Width="Auto" HorizontalAlignment="Stretch">
                <TextBlock Margin="12, 15, 12, 0" FontSize="18" Text="{x:Bind Path=Name, Mode=OneWay}" />
                <StackPanel>
                    <TextBlock Margin="12, 15, 12, 0" Text="{x:Bind Path=Category, Mode=OneWay}" />
                </StackPanel>
            </StackPanel>
        </DataTemplate>
    </Page.Resources>



    <StackPanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="Title" TextWrapping="Wrap" Text="{Binding selectedWishlist.Title, Mode=TwoWay}" Style="{StaticResource TitleTextBlockStyle}" Grid.ColumnSpan="3" Margin="5,5,5,5"/>
        </Grid>
        <StackPanel>
            <ListBox x:Name="myWishlistItems" ItemTemplate="{StaticResource ItemView}" SelectionChanged="SelectionChanged_WishlistItem" ItemsSource="{Binding selectedWishlist.Items, Mode=TwoWay}" SelectedItem="{Binding seletedItem, Mode=TwoWay}" Margin="5,5,5,5" >
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <Grid HorizontalAlignment="Center">
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="110"/>
                    <ColumnDefinition Width="110"/>
                    <ColumnDefinition Width="110"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Button Grid.Row="0" Grid.Column="0" Margin="0,0,0,10" Width="110" HorizontalAlignment="Center" Content="Add Item" Click="Button_Click" VerticalAlignment="Bottom"  />
                <Button Grid.Row="0" Grid.Column="1" Margin="10" Width="110" HorizontalAlignment="Center" Content="Add Buyer(s)"  x:Name="ButtonAddBuyer" Click="ButtonAddBuyers_Click"/>
                <Button Command="{Binding removeItemCommand}" CommandParameter="Untitled" Grid.Row="0" Grid.Column="2" Margin="10" Width="110" HorizontalAlignment="Center" Content="Remove"  x:Name="ButtonRemove" Visibility="Collapsed"/>
            </Grid>
        </StackPanel>
    </StackPanel>

</Page>